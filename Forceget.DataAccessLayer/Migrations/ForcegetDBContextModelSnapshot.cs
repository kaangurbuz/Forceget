// <auto-generated />
using Forceget.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forceget.DataAccessLayer.Migrations
{
    [DbContext(typeof(ForcegetDBContext))]
    partial class ForcegetDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Forceget.Core.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Miami"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            Name = "Minnesota"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            Name = "Shanghai"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 3,
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 3,
                            Name = "Izmir"
                        });
                });

            modelBuilder.Entity("Forceget.Core.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "China"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Turkey"
                        });
                });

            modelBuilder.Entity("Forceget.Core.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.HasKey("Id");

                    b.ToTable("Currency", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "US Dollar",
                            ShortName = "USD"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chinese Yuan",
                            ShortName = "CNY"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Turkish Lira",
                            ShortName = "TRY"
                        });
                });

            modelBuilder.Entity("Forceget.Core.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Incoterm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MovementType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PackageTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Unit1Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Unit2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Unit2Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PackageTypeId");

                    b.ToTable("Offer", (string)null);
                });

            modelBuilder.Entity("Forceget.Core.Models.PackageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PackageType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pallets"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Boxes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cartons"
                        });
                });

            modelBuilder.Entity("Forceget.Core.Models.City", b =>
                {
                    b.HasOne("Forceget.Core.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Forceget.Core.Models.Offer", b =>
                {
                    b.HasOne("Forceget.Core.Models.City", "City")
                        .WithMany("Offers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forceget.Core.Models.Currency", "Currency")
                        .WithMany("Offers")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forceget.Core.Models.PackageType", "PackageType")
                        .WithMany("Offers")
                        .HasForeignKey("PackageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Currency");

                    b.Navigation("PackageType");
                });

            modelBuilder.Entity("Forceget.Core.Models.City", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("Forceget.Core.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Forceget.Core.Models.Currency", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("Forceget.Core.Models.PackageType", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
